# Generated by Django 4.2 on 2023-04-20 14:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999)])),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999)])),
                ('is_visible', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999)])),
                ('name', models.CharField(max_length=25)),
                ('board_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yatapp.board')),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yatapp.group')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999)])),
                ('text', models.TextField(validators=[django.core.validators.MaxLengthValidator(999)])),
                ('is_completed', models.BooleanField(default=False)),
                ('time_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_deadline', models.DateTimeField(null=True)),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors_task', to=settings.AUTH_USER_MODEL)),
                ('section_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yatapp.section')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_task', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subtasks',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999)])),
                ('is_completed', models.BooleanField(default=False)),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yatapp.task')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999)])),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yatapp.task')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='board',
            name='admin_gid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='board_admins', to='yatapp.group'),
        ),
        migrations.AddField(
            model_name='board',
            name='user_gid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='board_users', to='yatapp.group'),
        ),
    ]
